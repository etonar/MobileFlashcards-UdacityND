{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getDecks, removeDeck } from \"../../utils/_DATA\";\nexport var GET_DECKS = 'GET_DECKS';\nexport var ADD_DECK = 'ADD_DECK';\nexport var ADD_CARD = 'ADD_CARD';\nexport var REMOVE_DECK = 'REMOVE_DECK';\nexport var handleGetDecks = function handleGetDecks(decks) {\n  return {\n    type: GET_DECKS,\n    payload: {\n      decks: decks\n    }\n  };\n};\nexport var handleAddDeck = function handleAddDeck(title) {\n  return {\n    type: ADD_DECK,\n    payload: {\n      title: title\n    }\n  };\n};\nexport var handleAddCard = function handleAddCard(deckID, card) {\n  return {\n    type: ADD_CARD,\n    payload: {\n      deckID: deckID,\n      card: card\n    }\n  };\n};\n\nvar deleteDeck = function deleteDeck(id) {\n  return {\n    type: REMOVE_DECK,\n    payload: {\n      id: id\n    }\n  };\n};\n\nexport var handleRemoveDeck = function handleRemoveDeck(id, dispatch) {\n  return _regeneratorRuntime.async(function handleRemoveDeck$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(removeDeck(id));\n\n        case 2:\n          return _context.abrupt(\"return\", dispatch(deleteDeck(id)));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var loadAllDecks = function loadAllDecks(dispatch) {\n  var decks;\n  return _regeneratorRuntime.async(function loadAllDecks$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(getDecks());\n\n        case 2:\n          decks = _context2.sent;\n          return _context2.abrupt(\"return\", dispatch(handleGetDecks(decks)));\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/AHMED/Desktop/mobile-flashcards-udacity/redux/actions/index.js"],"names":["getDecks","removeDeck","GET_DECKS","ADD_DECK","ADD_CARD","REMOVE_DECK","handleGetDecks","decks","type","payload","handleAddDeck","title","handleAddCard","deckID","card","deleteDeck","id","handleRemoveDeck","dispatch","loadAllDecks"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,UAAnB;AAGA,OAAO,IAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAGP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEN,SADD;AAELO,IAAAA,OAAO,EAAE;AAAEF,MAAAA,KAAK,EAALA;AAAF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AACtC,SAAO;AACLH,IAAAA,IAAI,EAAEL,QADD;AAELM,IAAAA,OAAO,EAAE;AAAEE,MAAAA,KAAK,EAALA;AAAF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAASC,IAAT,EAAkB;AAC7C,SAAO;AACLN,IAAAA,IAAI,EAAEJ,QADD;AAELK,IAAAA,OAAO,EAAE;AAAEI,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,IAAI,EAAJA;AAAV;AAFJ,GAAP;AAID,CALM;;AAOP,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAQ;AACzB,SAAO;AACLR,IAAAA,IAAI,EAAEH,WADD;AAELI,IAAAA,OAAO,EAAE;AAAEO,MAAAA,EAAE,EAAFA;AAAF;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAOD,EAAP,EAAWE,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACxBjB,UAAU,CAACe,EAAD,CADc;;AAAA;AAAA,2CAEvBE,QAAQ,CAACH,UAAU,CAACC,EAAD,CAAX,CAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAKP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAAOD,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACNlB,QAAQ,EADF;;AAAA;AACpBO,UAAAA,KADoB;AAAA,4CAEnBW,QAAQ,CAACZ,cAAc,CAACC,KAAD,CAAf,CAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import { getDecks, removeDeck } from '../../utils/_DATA'\r\n\r\n//Actions\r\nexport const GET_DECKS = 'GET_DECKS'\r\nexport const ADD_DECK = 'ADD_DECK'\r\nexport const ADD_CARD = 'ADD_CARD'\r\nexport const REMOVE_DECK = 'REMOVE_DECK'\r\n\r\n//Actions Creators\r\nexport const handleGetDecks = (decks) => {\r\n  return {\r\n    type: GET_DECKS,\r\n    payload: { decks },\r\n  }\r\n}\r\n\r\nexport const handleAddDeck = (title) => {\r\n  return {\r\n    type: ADD_DECK,\r\n    payload: { title },\r\n  }\r\n}\r\n\r\nexport const handleAddCard = (deckID, card) => {\r\n  return {\r\n    type: ADD_CARD,\r\n    payload: { deckID, card },\r\n  }\r\n}\r\n\r\nconst deleteDeck = (id) => {\r\n  return {\r\n    type: REMOVE_DECK,\r\n    payload: { id },\r\n  }\r\n}\r\n\r\nexport const handleRemoveDeck = async (id, dispatch) => {\r\n  await removeDeck(id)\r\n  return dispatch(deleteDeck(id))\r\n}\r\n\r\nexport const loadAllDecks = async (dispatch) => {\r\n  const decks = await getDecks()\r\n  return dispatch(handleGetDecks(decks))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}