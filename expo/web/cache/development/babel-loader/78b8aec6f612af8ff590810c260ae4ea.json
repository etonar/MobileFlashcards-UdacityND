{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"../components/Button\";\nimport { green, lightGreen, lightBlue, muted, red, textColor } from \"../utils/colors\";\n\nvar ScoreBoard = function ScoreBoard(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      id = _route$params.id,\n      correctAnswers = _route$params.correctAnswers,\n      totalQuestion = _route$params.totalQuestion;\n\n  var setTitle = function setTitle(id) {\n    navigation.setOptions({\n      title: id\n    });\n  };\n\n  useEffect(function () {\n    var _route$params2;\n\n    setTitle(((_route$params2 = route.params) == null ? void 0 : _route$params2.id) + \" Quiz Score\");\n  });\n  var score = Math.round(correctAnswers / totalQuestion * 100);\n  var result = score >= 65 ? styles.pass : styles.fair;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText\n  }, id, \" Quiz Completed!\"), React.createElement(Text, {\n    style: styles.scoreText\n  }, \"You answered \", correctAnswers, \" correctly out of \", totalQuestion, ' ', totalQuestion > 1 ? 'questions' : 'question')), React.createElement(View, null, React.createElement(Text, {\n    style: result\n  }, score, \"%\")), React.createElement(View, null, React.createElement(Button, {\n    btnStyle: {\n      backgroundColor: green,\n      borderColor: green\n    },\n    onPress: function onPress() {\n      return navigation.navigate('Quiz', {\n        id: id,\n        title: id\n      });\n    }\n  }, \"Restart Quiz\"), React.createElement(Button, {\n    btnStyle: {\n      backgroundColor: lightBlue,\n      borderColor: lightBlue\n    },\n    onPress: function onPress() {\n      return navigation.navigate('Single Deck', {\n        id: id,\n        title: id\n      });\n    }\n  }, \"Back to Deck\")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    backgroundColor: lightGreen\n  },\n  headerText: {\n    fontSize: 26,\n    color: textColor,\n    fontWeight: 'bold',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  scoreText: {\n    fontSize: 18,\n    color: muted,\n    marginTop: 10\n  },\n  pass: {\n    fontSize: 35,\n    color: green,\n    fontWeight: 'bold'\n  },\n  fair: {\n    fontSize: 35,\n    color: red,\n    fontWeight: 'bold'\n  }\n});\nexport default ScoreBoard;","map":{"version":3,"sources":["C:/Users/AHMED/Desktop/mobile-flashcards-udacity/views/ScoreBoard.js"],"names":["React","useEffect","Button","green","lightGreen","lightBlue","muted","red","textColor","ScoreBoard","route","navigation","params","id","correctAnswers","totalQuestion","setTitle","setOptions","title","score","Math","round","result","styles","pass","fair","container","alignItems","headerText","scoreText","backgroundColor","borderColor","navigate","StyleSheet","create","flex","justifyContent","fontSize","color","fontWeight","paddingLeft","paddingRight","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\nimport Button from '../components/Button'\r\nimport {\r\n  green,\r\n  lightGreen,\r\n  lightBlue,\r\n  muted,\r\n  red,\r\n  textColor,\r\n} from '../utils/colors'\r\n\r\nconst ScoreBoard = ({ route, navigation }) => {\r\n  const { id, correctAnswers, totalQuestion } = route.params\r\n\r\n  const setTitle = (id) => {\r\n    navigation.setOptions({ title: id })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTitle(`${route.params?.id} Quiz Score`)\r\n  })\r\n\r\n  const score = Math.round((correctAnswers / totalQuestion) * 100)\r\n  const result = score >= 65 ? styles.pass : styles.fair\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{ alignItems: 'center' }}>\r\n        <Text style={styles.headerText}>{id} Quiz Completed!</Text>\r\n        <Text style={styles.scoreText}>\r\n          You answered {correctAnswers} correctly out of {totalQuestion}{' '}\r\n          {totalQuestion > 1 ? 'questions' : 'question'}\r\n        </Text>\r\n      </View>\r\n      <View>\r\n        <Text style={result}>{score}%</Text>\r\n      </View>\r\n      <View>\r\n        <Button\r\n          btnStyle={{ backgroundColor: green, borderColor: green }}\r\n          onPress={() => navigation.navigate('Quiz', { id, title: id })}\r\n        >\r\n          Restart Quiz\r\n        </Button>\r\n        <Button\r\n          btnStyle={{ backgroundColor: lightBlue, borderColor: lightBlue }}\r\n          onPress={() => navigation.navigate('Single Deck', { id, title: id })}\r\n        >\r\n          Back to Deck\r\n        </Button>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    backgroundColor: lightGreen,\r\n  },\r\n  headerText: {\r\n    fontSize: 26,\r\n    color: textColor,\r\n    fontWeight: 'bold',\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  scoreText: {\r\n    fontSize: 18,\r\n    color: muted,\r\n    marginTop: 10,\r\n  },\r\n  pass: {\r\n    fontSize: 35,\r\n    color: green,\r\n    fontWeight: 'bold',\r\n  },\r\n  fair: {\r\n    fontSize: 35,\r\n    color: red,\r\n    fontWeight: 'bold',\r\n  },\r\n})\r\n\r\nexport default ScoreBoard\r\n"]},"metadata":{},"sourceType":"module"}