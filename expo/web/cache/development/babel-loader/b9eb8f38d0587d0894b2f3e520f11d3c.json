{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Deck from \"../components/Deck\";\nimport Button from \"../components/Button\";\nimport { lightGreen, black } from \"../utils/colors\";\nimport ButtonText from \"../components/ButtonText\";\nimport { useSelector } from 'react-redux';\nimport { handleRemoveDeck } from \"../redux/actions\";\nimport { connect } from 'react-redux';\n\nvar SingleDeck = function SingleDeck(_ref) {\n  var _route$params;\n\n  var navigation = _ref.navigation,\n      route = _ref.route,\n      dispatch = _ref.dispatch;\n  var decks = useSelector(function (decks) {\n    return decks;\n  });\n  var title = (_route$params = route.params) == null ? void 0 : _route$params.title;\n  var deck = decks[title];\n  var id = title;\n  var questions = deck == null ? void 0 : deck.questions;\n\n  var setTitle = function setTitle(title) {\n    navigation.setOptions({\n      title: title\n    });\n  };\n\n  useEffect(function () {\n    setTitle(title);\n  });\n\n  var deleteDeck = function deleteDeck(id) {\n    dispatch(handleRemoveDeck(id));\n    navigation.navigate('Home', {\n      screen: 'DeckList'\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Deck, {\n    style: styles.deckBox,\n    id: id,\n    questions: questions\n  }), React.createElement(View, null, React.createElement(Button, {\n    textBtn: {\n      color: black\n    },\n    onPress: function onPress() {\n      return navigation.navigate('Add New Question', {\n        title: title,\n        id: title\n      });\n    }\n  }, \"Add New Question\"), React.createElement(Button, {\n    btnStyle: {\n      backgroundColor: black\n    },\n    onPress: function onPress() {\n      return navigation.navigate('Quiz', {\n        title: title,\n        id: title\n      });\n    }\n  }, \"Start Quiz\")), React.createElement(ButtonText, {\n    onPress: function onPress() {\n      return deleteDeck(id);\n    }\n  }, \"Delete Deck\"));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around',\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: lightGreen\n  },\n  deckBox: {\n    backgroundColor: 'aliceblue',\n    borderRadius: 3\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default connect(mapStateToProps)(SingleDeck);","map":{"version":3,"sources":["C:/Users/AHMED/Desktop/mobile-flashcards-udacity/views/SingleDeck.js"],"names":["React","useEffect","Deck","Button","lightGreen","black","ButtonText","useSelector","handleRemoveDeck","connect","SingleDeck","navigation","route","dispatch","decks","title","params","deck","id","questions","setTitle","setOptions","deleteDeck","navigate","screen","styles","container","deckBox","color","backgroundColor","StyleSheet","create","flex","justifyContent","padding","alignItems","borderRadius","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { View, StyleSheet } from 'react-native'\r\nimport Deck from '../components/Deck'\r\nimport Button from '../components/Button'\r\nimport { lightGreen, black } from '../utils/colors'\r\nimport ButtonText from '../components/ButtonText'\r\nimport { useSelector } from 'react-redux'\r\nimport { handleRemoveDeck } from '../redux/actions'\r\nimport { connect } from 'react-redux'\r\n\r\nconst SingleDeck = ({ navigation, route, dispatch }) => {\r\n  const decks = useSelector((decks) => decks)\r\n  const title = route.params?.title\r\n  const deck = decks[title]\r\n  const id = title\r\n  const questions = deck?.questions\r\n\r\n  const setTitle = (title) => {\r\n    navigation.setOptions({ title: title })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTitle(title)\r\n  })\r\n\r\n  const deleteDeck = (id) => {\r\n    dispatch(handleRemoveDeck(id))\r\n    navigation.navigate('Home', { screen: 'DeckList' })\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Deck style={styles.deckBox} id={id} questions={questions} />\r\n      <View>\r\n        <Button\r\n          textBtn={{ color: black }}\r\n          onPress={() =>\r\n            navigation.navigate('Add New Question', { title: title, id: title })\r\n          }\r\n        >\r\n          Add New Question\r\n        </Button>\r\n        <Button\r\n          btnStyle={{ backgroundColor: black }}\r\n          onPress={() =>\r\n            navigation.navigate('Quiz', { title: title, id: title })\r\n          }\r\n        >\r\n          Start Quiz\r\n        </Button>\r\n      </View>\r\n      <ButtonText onPress={() => deleteDeck(id)}>Delete Deck</ButtonText>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'space-around',\r\n    padding: 20,\r\n    alignItems: 'center',\r\n    backgroundColor: lightGreen,\r\n  },\r\n  deckBox: {\r\n    backgroundColor: 'aliceblue',\r\n    borderRadius: 3,\r\n  },\r\n})\r\nconst mapStateToProps = (state) => {\r\n  return {}\r\n}\r\n\r\nexport default connect(mapStateToProps)(SingleDeck)\r\n"]},"metadata":{},"sourceType":"module"}