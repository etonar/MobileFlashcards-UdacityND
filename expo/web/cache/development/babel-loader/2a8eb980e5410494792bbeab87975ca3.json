{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { useNavigation, CommonActions } from '@react-navigation/native';\nimport { black, gray, lightGreen, textColor } from \"../utils/colors\";\nimport Button from \"../components/Button\";\nimport { handleAddDeck } from \"../redux/actions\";\nimport { saveDeckTitle } from \"../utils/helpers\";\nimport { connect } from 'react-redux';\n\nvar NewDeck = function NewDeck(_ref) {\n  var dispatch = _ref.dispatch;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var handleTitleChange = function handleTitleChange(title) {\n    setTitle(title);\n  };\n\n  var handleSubmit = function handleSubmit(title) {\n    var text = title.trim().split(' ').join('');\n    dispatch(handleAddDeck(text));\n    saveDeckTitle(text);\n    var resetRoute = CommonActions.reset({\n      index: 1,\n      routes: [{\n        name: 'Home'\n      }, {\n        name: 'Single Deck',\n        params: {\n          title: text,\n          id: text\n        }\n      }]\n    });\n    navigation.dispatch(resetRoute);\n    setTitle('');\n  };\n\n  var disabled = title.length === 0;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return title.trim() ? handleSubmit(title) : null;\n    },\n    disabled: disabled,\n    btnStyle: {\n      backgroundColor: black,\n      borderColor: black,\n      marginBottom: 40,\n      marginTop: 0\n    }\n  }, \"Submit\"));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around',\n    padding: 25,\n    backgroundColor: lightGreen\n  },\n  header: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: textColor,\n    marginBottom: 20\n  },\n  input: {\n    borderColor: black,\n    borderWidth: 1,\n    height: 50,\n    padding: 10,\n    marginTop: 15,\n    fontSize: 18,\n    borderRadius: Platform.OS === 'ios' ? 9 : 4\n  }\n});\nexport default connect()(NewDeck);","map":{"version":3,"sources":["C:/Users/AHMED/Desktop/mobile-flashcards-udacity/views/NewDeck.js"],"names":["React","useState","useNavigation","CommonActions","black","gray","lightGreen","textColor","Button","handleAddDeck","saveDeckTitle","connect","NewDeck","dispatch","title","setTitle","navigation","handleTitleChange","handleSubmit","text","trim","split","join","resetRoute","reset","index","routes","name","params","id","disabled","length","styles","container","backgroundColor","borderColor","marginBottom","marginTop","StyleSheet","create","flex","justifyContent","padding","header","fontSize","fontWeight","textAlign","color","input","borderWidth","height","borderRadius","Platform","OS"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  Platform,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  KeyboardAvoidingView,\r\n} from 'react-native'\r\nimport { useNavigation, CommonActions } from '@react-navigation/native'\r\nimport { black, gray, lightGreen, textColor } from '../utils/colors'\r\nimport Button from '../components/Button'\r\nimport { handleAddDeck } from '../redux/actions'\r\nimport { saveDeckTitle } from '../utils/helpers'\r\nimport { connect } from 'react-redux'\r\n\r\nconst NewDeck = ({ dispatch }) => {\r\n  const [title, setTitle] = useState('')\r\n  const navigation = useNavigation()\r\n\r\n  const handleTitleChange = (title) => {\r\n    setTitle(title)\r\n  }\r\n\r\n  const handleSubmit = (title) => {\r\n    const text = title.trim().split(' ').join('')\r\n\r\n    dispatch(handleAddDeck(text))\r\n    saveDeckTitle(text)\r\n\r\n    const resetRoute = CommonActions.reset({\r\n      index: 1,\r\n      routes: [\r\n        { name: 'Home' },\r\n        { name: 'Single Deck', params: { title: text, id: text } },\r\n      ],\r\n    })\r\n\r\n    navigation.dispatch(resetRoute)\r\n\r\n    setTitle('')\r\n  }\r\n\r\n  const disabled = title.length === 0\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Button\r\n        onPress={() => (title.trim() ? handleSubmit(title) : null)}\r\n        disabled={disabled}\r\n        btnStyle={{\r\n          backgroundColor: black,\r\n          borderColor: black,\r\n          marginBottom: 40,\r\n          marginTop: 0,\r\n        }}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'space-around',\r\n    padding: 25,\r\n    backgroundColor: lightGreen,\r\n  },\r\n  header: {\r\n    fontSize: 25,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: textColor,\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    borderColor: black,\r\n    borderWidth: 1,\r\n    height: 50,\r\n    padding: 10,\r\n    marginTop: 15,\r\n    fontSize: 18,\r\n    borderRadius: Platform.OS === 'ios' ? 9 : 4,\r\n  },\r\n})\r\n\r\nexport default connect()(NewDeck)\r\n"]},"metadata":{},"sourceType":"module"}