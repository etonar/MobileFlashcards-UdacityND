{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { black, gray, lightGreen, textColor } from \"../utils/colors\";\nimport Button from \"../components/Button\";\nimport { handleAddDeck } from \"../redux/actions\";\nimport { useNavigation, CommonActions } from '@react-navigation/native';\nimport { saveDeckTitle } from \"../utils/helpers\";\nimport { connect } from 'react-redux';\n\nvar NewDeck = function NewDeck() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var handleTitleChange = function handleTitleChange(title) {\n    setTitle(title);\n  };\n\n  var handleSubmit = function handleSubmit(title) {\n    var text = title.trim().split(' ').join('');\n    dispatch(handleAddDeck(text));\n    saveDeckTitle(text);\n    var resetRoute = CommonActions.reset({\n      index: 1,\n      routes: [{\n        name: 'AppHome'\n      }, {\n        name: 'Deck',\n        params: {\n          title: text,\n          id: text\n        }\n      }]\n    });\n    navigation.dispatch(resetRoute);\n    setTitle('');\n  };\n\n  var disabled = title.length === 0;\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    style: {\n      flex: 1\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: styles.header\n  }, \"What is the title of your new deck?\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Deck Title\",\n    placeholderTextColor: gray,\n    value: title,\n    onChangeText: handleTitleChange,\n    autoFocus: true\n  })), React.createElement(Button, {\n    onPress: function onPress() {\n      return title.trim() ? handleSubmit(title) : null;\n    },\n    disabled: disabled,\n    btnStyle: {\n      backgroundColor: black,\n      borderColor: black,\n      marginBottom: 40,\n      marginTop: 0\n    }\n  }, \"Submit\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around',\n    padding: 25,\n    backgroundColor: lightGreen\n  },\n  header: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: textColor,\n    marginBottom: 20\n  },\n  input: {\n    borderColor: black,\n    borderWidth: 1,\n    height: 50,\n    padding: 10,\n    marginTop: 15,\n    fontSize: 18,\n    borderRadius: Platform.OS === 'ios' ? 9 : 4\n  }\n});\nexport default connect()(NewDeck);","map":{"version":3,"sources":["C:/Users/AHMED/Desktop/mobile-flashcards-udacity/views/NewDeck.js"],"names":["React","useState","black","gray","lightGreen","textColor","Button","handleAddDeck","useNavigation","CommonActions","saveDeckTitle","connect","NewDeck","title","setTitle","navigation","handleTitleChange","handleSubmit","text","trim","split","join","dispatch","resetRoute","reset","index","routes","name","params","id","disabled","length","Platform","OS","flex","Keyboard","dismiss","styles","container","header","input","backgroundColor","borderColor","marginBottom","marginTop","StyleSheet","create","justifyContent","padding","fontSize","fontWeight","textAlign","color","borderWidth","height","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  Platform,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  KeyboardAvoidingView,\r\n} from 'react-native'\r\nimport { black, gray, lightGreen, textColor } from '../utils/colors'\r\nimport Button from '../components/Button'\r\nimport { handleAddDeck } from '../redux/actions'\r\nimport { useNavigation, CommonActions } from '@react-navigation/native'\r\nimport { saveDeckTitle } from '../utils/helpers'\r\nimport { connect } from 'react-redux'\r\n\r\nconst NewDeck = () => {\r\n  const [title, setTitle] = useState('')\r\n  const navigation = useNavigation()\r\n\r\n  const handleTitleChange = (title) => {\r\n    setTitle(title)\r\n  }\r\n\r\n  const handleSubmit = (title) => {\r\n    const text = title.trim().split(' ').join('')\r\n\r\n    dispatch(handleAddDeck(text))\r\n    saveDeckTitle(text)\r\n\r\n    const resetRoute = CommonActions.reset({\r\n      index: 1,\r\n      routes: [\r\n        { name: 'AppHome' },\r\n        { name: 'Deck', params: { title: text, id: text } },\r\n      ],\r\n    })\r\n\r\n    navigation.dispatch(resetRoute)\r\n\r\n    setTitle('')\r\n  }\r\n\r\n  const disabled = title.length === 0\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n        <View style={styles.container}>\r\n          <View>\r\n            <Text style={styles.header}>\r\n              What is the title of your new deck?\r\n            </Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder='Deck Title'\r\n              placeholderTextColor={gray}\r\n              value={title}\r\n              onChangeText={handleTitleChange}\r\n              autoFocus={true}\r\n            />\r\n          </View>\r\n          <Button\r\n            onPress={() => (title.trim() ? handleSubmit(title) : null)}\r\n            disabled={disabled}\r\n            btnStyle={{\r\n              backgroundColor: black,\r\n              borderColor: black,\r\n              marginBottom: 40,\r\n              marginTop: 0,\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'space-around',\r\n    padding: 25,\r\n    backgroundColor: lightGreen,\r\n  },\r\n  header: {\r\n    fontSize: 25,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: textColor,\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    borderColor: black,\r\n    borderWidth: 1,\r\n    height: 50,\r\n    padding: 10,\r\n    marginTop: 15,\r\n    fontSize: 18,\r\n    borderRadius: Platform.OS === 'ios' ? 9 : 4,\r\n  },\r\n})\r\n\r\nexport default connect()(NewDeck)\r\n"]},"metadata":{},"sourceType":"module"}