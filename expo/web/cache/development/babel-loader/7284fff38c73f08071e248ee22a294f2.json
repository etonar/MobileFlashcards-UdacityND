{"ast":null,"code":"import React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { DeckList, NewDeck, NewQuestion, Quiz, SingleDeck } from \"../views\";\nimport { FontAwesome, AntDesign } from '@expo/vector-icons';\nimport { white, blue } from \"../utils/colors\";\nvar Tab = Platform.OS === 'ios' ? createBottomTabNavigator() : createMaterialTopTabNavigator();\nvar AppTabConfigs = {\n  screenOptions: function screenOptions(_ref) {\n    var route = _ref.route;\n    return {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        var Icon;\n\n        if (route.name === 'DeckList') {\n          Icon = React.createElement(AntDesign, {\n            name: \"book\",\n            size: 25,\n            color: color\n          });\n        } else if (route.name === 'NewDeck') {\n          Icon = React.createElement(FontAwesome, {\n            name: \"plus-square\",\n            size: 25,\n            color: color\n          });\n        }\n\n        return Icon;\n      },\n      headerShown: false,\n      tabBarActiveTintColor: Platform.OS === 'ios' ? blue : white,\n      tabBarStyle: {\n        backgroundColor: Platform.OS === 'ios' ? white : blue,\n        height: 70,\n        shadowColor: 'rgba(0, 0, 0, 0.24)',\n        shadowOffset: {\n          width: 0,\n          height: 3\n        },\n        shadowRadius: 6,\n        shadowOpacity: 1\n      },\n      tabBarIndicatorStyle: {\n        backgroundColor: 'yellow'\n      }\n    };\n  }\n};\nvar RouteConfigs = {\n  DeckList: {\n    name: 'My Decks',\n    component: DeckList,\n    options: {\n      tabBarLabel: 'Decks'\n    }\n  },\n  NewDeck: {\n    name: 'Add New Deck',\n    component: NewDeck,\n    options: {\n      tabBarLabel: 'Add New Deck'\n    }\n  }\n};\n\nvar Home = function Home() {\n  return React.createElement(Tab.Navigator, AppTabConfigs, React.createElement(Tab.Screen, RouteConfigs.DeckList), React.createElement(Tab.Screen, RouteConfigs.NewDeck));\n};\n\nvar StackConfig = {\n  screenOptions: {\n    headerMode: 'screen'\n  }\n};\nvar StackScreenConfigs = {\n  Home: {\n    name: 'Home',\n    component: Home,\n    options: {\n      headerTintColor: white,\n      headerStyle: {\n        backgroundColor: blue\n      },\n      headerTitleStyle: {\n        fontSize: 22,\n        textAlign: 'center'\n      },\n      headerTitleAlign: 'center',\n      title: 'Flashcards'\n    }\n  },\n  SingleDeck: {\n    name: 'Single Deck',\n    component: SingleDeck,\n    options: function options(_ref3) {\n      var navigation = _ref3.navigation,\n          route = _ref3.route;\n      return {\n        headerTintColor: white,\n        headerStyle: {\n          backgroundColor: blue\n        },\n        headerTitleStyle: {\n          fontSize: 22,\n          textAlign: 'center'\n        },\n        title: 'Deck',\n        headerBackTitle: 'Flashcards',\n        headerTitleAlign: 'center',\n        headerBackTitleVisible: false\n      };\n    }\n  },\n  NewQuestion: {\n    name: 'NewQuestion',\n    component: NewQuestion,\n    options: {\n      headerTintColor: white,\n      headerStyle: {\n        backgroundColor: blue\n      },\n      headerTitleStyle: {\n        fontSize: 22,\n        textAlign: 'center'\n      },\n      headerTitleAlign: 'center',\n      title: 'Add Card'\n    }\n  },\n  NewDeck: {\n    name: 'NewDeck',\n    component: NewDeck,\n    options: {\n      headerTintColor: white,\n      headerStyle: {\n        backgroundColor: blue\n      },\n      headerTitleStyle: {\n        fontSize: 22,\n        textAlign: 'center'\n      },\n      title: 'New Deck'\n    }\n  },\n  Quiz: {\n    name: 'Quiz',\n    component: Quiz,\n    options: {\n      headerTintColor: white,\n      headerStyle: {\n        backgroundColor: blue\n      },\n      headerTitleStyle: {\n        fontSize: 22,\n        textAlign: 'center'\n      },\n      headerTitleAlign: 'center',\n      title: 'Quiz'\n    }\n  }\n};\nvar Stack = createStackNavigator();\n\nvar Navigation = function Navigation() {\n  return React.createElement(Stack.Navigator, StackConfig, React.createElement(Stack.Screen, StackScreenConfigs.Home), React.createElement(Stack.Screen, StackScreenConfigs.SingleDeck), React.createElement(Stack.Screen, StackScreenConfigs.NewQuestion), React.createElement(Stack.Screen, StackScreenConfigs.NewDeck), React.createElement(Stack.Screen, StackScreenConfigs.Quiz));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["C:/Users/AHMED/Desktop/mobile-flashcards-udacity/routing/index.js"],"names":["React","createStackNavigator","createBottomTabNavigator","createMaterialTopTabNavigator","DeckList","NewDeck","NewQuestion","Quiz","SingleDeck","FontAwesome","AntDesign","white","blue","Tab","Platform","OS","AppTabConfigs","screenOptions","route","tabBarIcon","color","Icon","name","headerShown","tabBarActiveTintColor","tabBarStyle","backgroundColor","height","shadowColor","shadowOffset","width","shadowRadius","shadowOpacity","tabBarIndicatorStyle","RouteConfigs","component","options","tabBarLabel","Home","StackConfig","headerMode","StackScreenConfigs","headerTintColor","headerStyle","headerTitleStyle","fontSize","textAlign","headerTitleAlign","title","navigation","headerBackTitle","headerBackTitleVisible","Stack","Navigation"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Platform } from 'react-native'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs'\r\n\r\n//Views\r\nimport { DeckList, NewDeck, NewQuestion, Quiz, SingleDeck } from '../views'\r\n\r\n//icons\r\nimport { FontAwesome, AntDesign } from '@expo/vector-icons'\r\n\r\n//colors\r\nimport { white, blue } from '../utils/colors'\r\n\r\nconst Tab =\r\n  Platform.OS === 'ios'\r\n    ? createBottomTabNavigator()\r\n    : createMaterialTopTabNavigator()\r\n\r\nconst AppTabConfigs = {\r\n  screenOptions: ({ route }) => ({\r\n    tabBarIcon: ({ color }) => {\r\n      let Icon\r\n      if (route.name === 'DeckList') {\r\n        Icon = <AntDesign name='book' size={25} color={color} />\r\n      } else if (route.name === 'NewDeck') {\r\n        Icon = <FontAwesome name='plus-square' size={25} color={color} />\r\n      }\r\n      return Icon\r\n    },\r\n    headerShown: false,\r\n    tabBarActiveTintColor: Platform.OS === 'ios' ? blue : white,\r\n    tabBarStyle: {\r\n      backgroundColor: Platform.OS === 'ios' ? white : blue,\r\n      height: 70,\r\n      shadowColor: 'rgba(0, 0, 0, 0.24)',\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 3,\r\n      },\r\n      shadowRadius: 6,\r\n      shadowOpacity: 1,\r\n    },\r\n    tabBarIndicatorStyle: {\r\n      backgroundColor: 'yellow',\r\n    },\r\n  }),\r\n}\r\n\r\nconst RouteConfigs = {\r\n  DeckList: {\r\n    name: 'My Decks',\r\n    component: DeckList,\r\n    options: {\r\n      tabBarLabel: 'Decks',\r\n    },\r\n  },\r\n  NewDeck: {\r\n    name: 'Add New Deck',\r\n    component: NewDeck,\r\n    options: {\r\n      tabBarLabel: 'Add New Deck',\r\n    },\r\n  },\r\n}\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Tab.Navigator {...AppTabConfigs}>\r\n      <Tab.Screen {...RouteConfigs.DeckList} />\r\n      <Tab.Screen {...RouteConfigs.NewDeck} />\r\n    </Tab.Navigator>\r\n  )\r\n}\r\n\r\nconst StackConfig = {\r\n  screenOptions: {\r\n    headerMode: 'screen',\r\n  },\r\n}\r\n\r\nconst StackScreenConfigs = {\r\n  Home: {\r\n    name: 'Home',\r\n    component: Home,\r\n    options: {\r\n      headerTintColor: white,\r\n      headerStyle: {\r\n        backgroundColor: blue,\r\n      },\r\n      headerTitleStyle: {\r\n        fontSize: 22,\r\n        textAlign: 'center',\r\n      },\r\n      headerTitleAlign: 'center',\r\n      title: 'Flashcards',\r\n    },\r\n  },\r\n  SingleDeck: {\r\n    name: 'Single Deck',\r\n    component: SingleDeck,\r\n    options: ({ navigation, route }) => ({\r\n      headerTintColor: white,\r\n      headerStyle: {\r\n        backgroundColor: blue,\r\n      },\r\n      headerTitleStyle: {\r\n        fontSize: 22,\r\n        textAlign: 'center',\r\n      },\r\n      title: 'Deck',\r\n      headerBackTitle: 'Flashcards',\r\n      headerTitleAlign: 'center',\r\n      headerBackTitleVisible: false,\r\n    }),\r\n  },\r\n  NewQuestion: {\r\n    name: 'NewQuestion',\r\n    component: NewQuestion,\r\n    options: {\r\n      headerTintColor: white,\r\n      headerStyle: {\r\n        backgroundColor: blue,\r\n      },\r\n      headerTitleStyle: {\r\n        fontSize: 22,\r\n        textAlign: 'center',\r\n      },\r\n      headerTitleAlign: 'center',\r\n      title: 'Add Card',\r\n    },\r\n  },\r\n  NewDeck: {\r\n    name: 'NewDeck',\r\n    component: NewDeck,\r\n    options: {\r\n      headerTintColor: white,\r\n      headerStyle: {\r\n        backgroundColor: blue,\r\n      },\r\n      headerTitleStyle: {\r\n        fontSize: 22,\r\n        textAlign: 'center',\r\n      },\r\n      title: 'New Deck',\r\n    },\r\n  },\r\n  Quiz: {\r\n    name: 'Quiz',\r\n    component: Quiz,\r\n    options: {\r\n      headerTintColor: white,\r\n\r\n      headerStyle: {\r\n        backgroundColor: blue,\r\n      },\r\n      headerTitleStyle: {\r\n        fontSize: 22,\r\n        textAlign: 'center',\r\n      },\r\n      headerTitleAlign: 'center',\r\n      title: 'Quiz',\r\n    },\r\n  },\r\n}\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nconst Navigation = () => (\r\n  <Stack.Navigator {...StackConfig}>\r\n    <Stack.Screen {...StackScreenConfigs.Home} />\r\n    <Stack.Screen {...StackScreenConfigs.SingleDeck} />\r\n    <Stack.Screen {...StackScreenConfigs.NewQuestion} />\r\n    <Stack.Screen {...StackScreenConfigs.NewDeck} />\r\n    <Stack.Screen {...StackScreenConfigs.Quiz} />\r\n  </Stack.Navigator>\r\n)\r\n\r\nexport default Navigation\r\n"]},"metadata":{},"sourceType":"module"}