{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { GET_DECKS, ADD_CARD, ADD_DECK, REMOVE_DECK } from \"../actions\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === GET_DECKS) {\n    return _objectSpread(_objectSpread({}, state), action.payload.decks);\n  }\n\n  if (action.type === ADD_DECK) {\n    var title = action.payload.title;\n    return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, title, {\n      title: title,\n      questions: []\n    }));\n  }\n\n  if (action.type === ADD_CARD) {\n    var _action$payload = action.payload,\n        deckID = _action$payload.deckID,\n        card = _action$payload.card;\n    return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, deckID, _objectSpread(_objectSpread({}, state[deckID]), {}, {\n      questions: _toConsumableArray(state[deckID].questions).concat(card)\n    })));\n  }\n\n  if (action.type === REMOVE_DECK) {\n    var id = action.payload.id;\n\n    var value = state[id],\n        newState = _objectWithoutProperties(state, [id].map(_toPropertyKey));\n\n    return newState;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/AHMED/Desktop/mobile-flashcards-udacity/redux/reducers/reducer.js"],"names":["GET_DECKS","ADD_CARD","ADD_DECK","REMOVE_DECK","reducer","state","action","type","payload","decks","title","questions","deckID","card","concat","id","value","newState"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,WAAxC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgBP,SAApB,EAA+B;AAC7B,2CACKK,KADL,GAEKC,MAAM,CAACE,OAAP,CAAeC,KAFpB;AAID;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBL,QAApB,EAA8B;AAC5B,QAAQQ,KAAR,GAAkBJ,MAAM,CAACE,OAAzB,CAAQE,KAAR;AACA,2CACKL,KADL,2BAEGK,KAFH,EAEW;AACPA,MAAAA,KAAK,EAALA,KADO;AAEPC,MAAAA,SAAS,EAAE;AAFJ,KAFX;AAOD;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgBN,QAApB,EAA8B;AAC5B,0BAAyBK,MAAM,CAACE,OAAhC;AAAA,QAAQI,MAAR,mBAAQA,MAAR;AAAA,QAAgBC,IAAhB,mBAAgBA,IAAhB;AACA,2CACKR,KADL,2BAEGO,MAFH,kCAGOP,KAAK,CAACO,MAAD,CAHZ;AAIID,MAAAA,SAAS,EAAE,mBAAIN,KAAK,CAACO,MAAD,CAAL,CAAcD,SAAlB,EAA6BG,MAA7B,CAAoCD,IAApC;AAJf;AAOD;;AACD,MAAIP,MAAM,CAACC,IAAP,KAAgBJ,WAApB,EAAiC;AAC/B,QAAQY,EAAR,GAAeT,MAAM,CAACE,OAAtB,CAAQO,EAAR;;AACA,QAAcC,KAAd,GAAqCX,KAArC,CAASU,EAAT;AAAA,QAAwBE,QAAxB,4BAAqCZ,KAArC,GAASU,EAAT;;AACA,WAAOE,QAAP;AACD;;AACD,SAAOZ,KAAP;AACD,CAjCD;;AAmCA,eAAeD,OAAf","sourcesContent":["import { GET_DECKS, ADD_CARD, ADD_DECK, REMOVE_DECK } from '../actions'\r\n\r\nconst reducer = (state = {}, action) => {\r\n  if (action.type === GET_DECKS) {\r\n    return {\r\n      ...state,\r\n      ...action.payload.decks,\r\n    }\r\n  }\r\n  if (action.type === ADD_DECK) {\r\n    const { title } = action.payload\r\n    return {\r\n      ...state,\r\n      [title]: {\r\n        title,\r\n        questions: [],\r\n      },\r\n    }\r\n  }\r\n  if (action.type === ADD_CARD) {\r\n    const { deckID, card } = action.payload\r\n    return {\r\n      ...state,\r\n      [deckID]: {\r\n        ...state[deckID],\r\n        questions: [...state[deckID].questions].concat(card),\r\n      },\r\n    }\r\n  }\r\n  if (action.type === REMOVE_DECK) {\r\n    const { id } = action.payload\r\n    const { [id]: value, ...newState } = state\r\n    return newState\r\n  }\r\n  return state\r\n}\r\n\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}