{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { loadAllDecks } from \"../redux/actions\";\nimport Deck from \"../components/Deck\";\nimport { lightGreen } from \"../utils/colors\";\nimport { connect } from 'react-redux';\n\nvar DeckList = function DeckList(_ref) {\n  var navigation = _ref.navigation,\n      dispatch = _ref.dispatch,\n      decks = _ref.decks;\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fetchData();\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  var fetchData = function fetchData() {\n    var action;\n    return _regeneratorRuntime.async(function fetchData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(loadAllDecks(dispatch));\n\n          case 2:\n            action = _context2.sent;\n            dispatch(action);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container\n  }, Object.keys(decks).map(function (deck) {\n    var questions = decks[deck].questions;\n    return React.createElement(Deck, {\n      key: deck,\n      id: deck,\n      questions: questions,\n      onPress: function onPress() {\n        return navigation.navigate('Deck', {\n          title: deck\n        });\n      }\n    });\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: lightGreen\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    decks: state\n  };\n};\n\nexport default connect(mapStateToProps)(DeckList);","map":{"version":3,"sources":["C:/Users/AHMED/Desktop/mobile-flashcards-udacity/views/DeckList.js"],"names":["React","useEffect","useSelector","useDispatch","loadAllDecks","Deck","lightGreen","connect","DeckList","navigation","dispatch","decks","fetchData","action","styles","container","Object","keys","map","deck","questions","navigate","title","StyleSheet","create","flex","backgroundColor","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,SAASC,YAAT;AACA,OAAOC,IAAP;AACA,SAASC,UAAT;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAqC;AAAA,MAAlCC,UAAkC,QAAlCA,UAAkC;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACpDV,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AACRW,YAAAA,SAAS;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAEN,EAFM,CAAT;;AAIA,MAAMA,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKR,YAAY,CAACM,QAAD,CADjB;;AAAA;AACVG,YAAAA,MADU;AAEhBH,YAAAA,QAAQ,CAACG,MAAD,CAAR;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAKA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,MAAM,CAACC;AAA5B,KACGC,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,GAAnB,CAAuB,UAACC,IAAD,EAAU;AAChC,QAAMC,SAAS,GAAGT,KAAK,CAACQ,IAAD,CAAL,CAAYC,SAA9B;AACA,WACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAED,IADP;AAEE,MAAA,EAAE,EAAEA,IAFN;AAGE,MAAA,SAAS,EAAEC,SAHb;AAIE,MAAA,OAAO,EAAE;AAAA,eAAMX,UAAU,CAACY,QAAX,CAAoB,MAApB,EAA4B;AAAEC,UAAAA,KAAK,EAAEH;AAAT,SAA5B,CAAN;AAAA;AAJX,MADF;AAQD,GAVA,CADH,CADF;AAeD,CAzBD;;AA2BA,IAAML,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAEpB;AAFR;AADoB,CAAlB,CAAf;;AAOA,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AAAEjB,IAAAA,KAAK,EAAEiB;AAAT,GAAP;AACD,CAFD;;AAIA,eAAerB,OAAO,CAACoB,eAAD,CAAP,CAAyBnB,QAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { StyleSheet, SafeAreaView } from 'react-native'\r\nimport { loadAllDecks } from '../redux/actions'\r\nimport Deck from '../components/Deck'\r\nimport { lightGreen } from '../utils/colors'\r\nimport { connect } from 'react-redux'\r\n\r\nconst DeckList = ({ navigation, dispatch, decks }) => {\r\n  useEffect(async () => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const fetchData = async () => {\r\n    const action = await loadAllDecks(dispatch)\r\n    dispatch(action)\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      {Object.keys(decks).map((deck) => {\r\n        const questions = decks[deck].questions\r\n        return (\r\n          <Deck\r\n            key={deck}\r\n            id={deck}\r\n            questions={questions}\r\n            onPress={() => navigation.navigate('Deck', { title: deck })}\r\n          />\r\n        )\r\n      })}\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: lightGreen,\r\n  },\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { decks: state }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DeckList)\r\n"]},"metadata":{},"sourceType":"module"}