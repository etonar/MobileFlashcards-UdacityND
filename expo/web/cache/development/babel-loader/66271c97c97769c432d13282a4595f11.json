{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { white, black, lightGray } from \"../utils/colors\";\n\nvar Button = function Button(_ref) {\n  var onPress = _ref.onPress,\n      _ref$btnStyle = _ref.btnStyle,\n      btnStyle = _ref$btnStyle === void 0 ? {} : _ref$btnStyle,\n      _ref$textBtn = _ref.textBtn,\n      textBtn = _ref$textBtn === void 0 ? {} : _ref$textBtn,\n      children = _ref.children,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled;\n  var disabledBtn = disabled ? styles.disabledBtn : {};\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(TouchableOpacity, {\n    style: [Platform.OS === 'ios' ? styles.iosBtn : styles.droidBtn, btnStyle, disabledBtn],\n    onPress: onPress,\n    disabled: disabled\n  }, React.createElement(Text, {\n    style: [styles.textButton, textBtn]\n  }, children)));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center'\n  },\n  iosBtn: {\n    backgroundColor: white,\n    padding: 20,\n    borderRadius: 10,\n    width: 200,\n    marginLeft: 40,\n    marginRight: 40,\n    marginTop: 10,\n    borderWidth: 1,\n    borderColor: black\n  },\n  droidBtn: {\n    backgroundColor: white,\n    width: 200,\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n    marginTop: 20,\n    borderRadius: 5,\n    borderColor: black,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1\n  },\n  disabledBtn: {\n    backgroundColor: lightGray,\n    opacity: 1,\n    borderColor: lightGray\n  },\n  textButton: {\n    color: white,\n    fontSize: 18,\n    textAlign: 'center'\n  }\n});\nexport default Button;","map":{"version":3,"sources":["C:/Users/AHMED/Desktop/mobile-flashcards-udacity/components/Button.js"],"names":["React","white","black","lightGray","Button","onPress","btnStyle","textBtn","children","disabled","disabledBtn","styles","container","Platform","OS","iosBtn","droidBtn","textButton","StyleSheet","create","alignItems","backgroundColor","padding","borderRadius","width","marginLeft","marginRight","marginTop","borderWidth","borderColor","paddingLeft","paddingRight","justifyContent","opacity","color","fontSize","textAlign"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,SAAvB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAMT;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,2BAJJC,QAII;AAAA,MAJJA,QAII,8BAJO,EAIP;AAAA,0BAHJC,OAGI;AAAA,MAHJA,OAGI,6BAHM,EAGN;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,2BADJC,QACI;AAAA,MADJA,QACI,8BADO,KACP;AACJ,MAAMC,WAAW,GAAGD,QAAQ,GAAGE,MAAM,CAACD,WAAV,GAAwB,EAApD;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE,CACLC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwBH,MAAM,CAACI,MAA/B,GAAwCJ,MAAM,CAACK,QAD1C,EAELV,QAFK,EAGLI,WAHK,CADT;AAME,IAAA,OAAO,EAAEL,OANX;AAOE,IAAA,QAAQ,EAAEI;AAPZ,KASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACE,MAAM,CAACM,UAAR,EAAoBV,OAApB;AAAb,KAA4CC,QAA5C,CATF,CADF,CADF;AAeD,CAxBD;;AA0BA,IAAMG,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,UAAU,EAAE;AADH,GADoB;AAI/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,eAAe,EAAEpB,KADX;AAENqB,IAAAA,OAAO,EAAE,EAFH;AAGNC,IAAAA,YAAY,EAAE,EAHR;AAINC,IAAAA,KAAK,EAAE,GAJD;AAKNC,IAAAA,UAAU,EAAE,EALN;AAMNC,IAAAA,WAAW,EAAE,EANP;AAONC,IAAAA,SAAS,EAAE,EAPL;AAQNC,IAAAA,WAAW,EAAE,CARP;AASNC,IAAAA,WAAW,EAAE3B;AATP,GAJuB;AAe/Bc,EAAAA,QAAQ,EAAE;AACRK,IAAAA,eAAe,EAAEpB,KADT;AAERuB,IAAAA,KAAK,EAAE,GAFC;AAGRF,IAAAA,OAAO,EAAE,EAHD;AAIRQ,IAAAA,WAAW,EAAE,EAJL;AAKRC,IAAAA,YAAY,EAAE,EALN;AAMRJ,IAAAA,SAAS,EAAE,EANH;AAORJ,IAAAA,YAAY,EAAE,CAPN;AAQRM,IAAAA,WAAW,EAAE3B,KARL;AASR8B,IAAAA,cAAc,EAAE,QATR;AAURZ,IAAAA,UAAU,EAAE,QAVJ;AAWRQ,IAAAA,WAAW,EAAE;AAXL,GAfqB;AA4B/BlB,EAAAA,WAAW,EAAE;AACXW,IAAAA,eAAe,EAAElB,SADN;AAEX8B,IAAAA,OAAO,EAAE,CAFE;AAGXJ,IAAAA,WAAW,EAAE1B;AAHF,GA5BkB;AAiC/Bc,EAAAA,UAAU,EAAE;AACViB,IAAAA,KAAK,EAAEjC,KADG;AAEVkC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,SAAS,EAAE;AAHD;AAjCmB,CAAlB,CAAf;AAwCA,eAAehC,MAAf","sourcesContent":["import React from 'react'\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Text,\r\n  StyleSheet,\r\n  Platform,\r\n} from 'react-native'\r\nimport { white, black, lightGray } from '../utils/colors'\r\n\r\nconst Button = ({\r\n  onPress,\r\n  btnStyle = {},\r\n  textBtn = {},\r\n  children,\r\n  disabled = false,\r\n}) => {\r\n  const disabledBtn = disabled ? styles.disabledBtn : {}\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={[\r\n          Platform.OS === 'ios' ? styles.iosBtn : styles.droidBtn,\r\n          btnStyle,\r\n          disabledBtn,\r\n        ]}\r\n        onPress={onPress}\r\n        disabled={disabled}\r\n      >\r\n        <Text style={[styles.textButton, textBtn]}>{children}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'center',\r\n  },\r\n  iosBtn: {\r\n    backgroundColor: white,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    width: 200,\r\n    marginLeft: 40,\r\n    marginRight: 40,\r\n    marginTop: 10,\r\n    borderWidth: 1,\r\n    borderColor: black,\r\n  },\r\n  droidBtn: {\r\n    backgroundColor: white,\r\n    width: 200,\r\n    padding: 10,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    marginTop: 20,\r\n    borderRadius: 5,\r\n    borderColor: black,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n  },\r\n  disabledBtn: {\r\n    backgroundColor: lightGray,\r\n    opacity: 1,\r\n    borderColor: lightGray,\r\n  },\r\n  textButton: {\r\n    color: white,\r\n    fontSize: 18,\r\n    textAlign: 'center',\r\n  },\r\n})\r\n\r\nexport default Button\r\n"]},"metadata":{},"sourceType":"module"}