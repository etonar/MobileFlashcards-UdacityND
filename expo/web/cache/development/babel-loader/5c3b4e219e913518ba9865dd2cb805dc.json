{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getDecks, removeDeck } from \"../../utils/_DATA\";\nexport var GET_DECKS = 'GET_DECKS';\nexport var ADD_DECK = 'ADD_DECK';\nexport var ADD_CARD = 'ADD_CARD';\nexport var REMOVE_DECK = 'REMOVE_DECK';\nexport var handleGetDecks = function handleGetDecks(decks) {\n  return {\n    type: GET_DECKS,\n    decks: decks\n  };\n};\nexport var handleAddDeck = function handleAddDeck(title) {\n  return {\n    type: ADD_DECK,\n    title: title\n  };\n};\nexport var handleAddCard = function handleAddCard(deckId, card) {\n  return {\n    type: ADD_CARD,\n    deckId: deckId,\n    card: card\n  };\n};\n\nvar deleteDeck = function deleteDeck(id) {\n  return {\n    type: REMOVE_DECK,\n    id: id\n  };\n};\n\nexport var handleRemoveDeck = function handleRemoveDeck(id) {\n  return function (dispatch) {\n    return removeDeck(id).then(function () {\n      return dispatch(deleteDeck(id));\n    });\n  };\n};\nexport var loadAllDecks = function loadAllDecks() {\n  ;\n\n  (function _callee(dispatch) {\n    var decks;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getDecks());\n\n          case 2:\n            decks = _context.sent;\n            dispatch(handleGetDecks(decks));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n};","map":{"version":3,"sources":["C:/Users/AHMED/Desktop/mobile-flashcards-udacity/redux/actions/index.js"],"names":["getDecks","removeDeck","GET_DECKS","ADD_DECK","ADD_CARD","REMOVE_DECK","handleGetDecks","decks","type","handleAddDeck","title","handleAddCard","deckId","card","deleteDeck","id","handleRemoveDeck","dispatch","then","loadAllDecks"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,UAAnB;AAGA,OAAO,IAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAGP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEN,SADD;AAELK,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AACtC,SAAO;AACLF,IAAAA,IAAI,EAAEL,QADD;AAELO,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAASC,IAAT,EAAkB;AAC7C,SAAO;AACLL,IAAAA,IAAI,EAAEJ,QADD;AAELQ,IAAAA,MAAM,EAANA,MAFK;AAGLC,IAAAA,IAAI,EAAJA;AAHK,GAAP;AAKD,CANM;;AAQP,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAQ;AACzB,SAAO;AACLP,IAAAA,IAAI,EAAEH,WADD;AAELU,IAAAA,EAAE,EAAFA;AAFK,GAAP;AAID,CALD;;AAOA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACD,EAAD,EAAQ;AACtC,SAAO,UAACE,QAAD,EAAc;AACnB,WAAOhB,UAAU,CAACc,EAAD,CAAV,CAAeG,IAAf,CAAoB;AAAA,aAAMD,QAAQ,CAACH,UAAU,CAACC,EAAD,CAAX,CAAd;AAAA,KAApB,CAAP;AACD,GAFD;AAGD,CAJM;AAMP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC;;AAAC,oBAAOF,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACqBjB,QAAQ,EAD7B;;AAAA;AACOO,YAAAA,KADP;AAECU,YAAAA,QAAQ,CAACX,cAAc,CAACC,KAAD,CAAf,CAAR;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIF,CALM","sourcesContent":["import { getDecks, removeDeck } from '../../utils/_DATA'\r\n\r\n//Actions\r\nexport const GET_DECKS = 'GET_DECKS'\r\nexport const ADD_DECK = 'ADD_DECK'\r\nexport const ADD_CARD = 'ADD_CARD'\r\nexport const REMOVE_DECK = 'REMOVE_DECK'\r\n\r\n//Actions Creators\r\nexport const handleGetDecks = (decks) => {\r\n  return {\r\n    type: GET_DECKS,\r\n    decks,\r\n  }\r\n}\r\n\r\nexport const handleAddDeck = (title) => {\r\n  return {\r\n    type: ADD_DECK,\r\n    title,\r\n  }\r\n}\r\n\r\nexport const handleAddCard = (deckId, card) => {\r\n  return {\r\n    type: ADD_CARD,\r\n    deckId,\r\n    card,\r\n  }\r\n}\r\n\r\nconst deleteDeck = (id) => {\r\n  return {\r\n    type: REMOVE_DECK,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const handleRemoveDeck = (id) => {\r\n  return (dispatch) => {\r\n    return removeDeck(id).then(() => dispatch(deleteDeck(id)))\r\n  }\r\n}\r\n\r\nexport const loadAllDecks = () => {\r\n  ;async (dispatch) => {\r\n    const decks = await getDecks()\r\n    dispatch(handleGetDecks(decks))\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}