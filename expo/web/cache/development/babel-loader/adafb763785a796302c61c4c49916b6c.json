{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { white, textColor, red } from \"../utils/colors\";\n\nvar Deck = function Deck(_ref) {\n  var _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      id = _ref.id,\n      questions = _ref.questions,\n      onPress = _ref.onPress;\n\n  if (id === null) {\n    return React.createElement(View, {\n      style: [styles.container, style]\n    }, React.createElement(Text, {\n      style: styles.cardTitle\n    }, \"No deck on the list\"));\n  }\n\n  return React.createElement(View, {\n    style: [styles.deckBox, style]\n  }, React.createElement(TouchableOpacity, {\n    onPress: onPress\n  }, React.createElement(Text, {\n    style: styles.cardTitle\n  }, id), React.createElement(Text, {\n    style: styles.cardSubtitle\n  }, ' ', questions && (questions == null ? void 0 : questions.length), ' ', (questions == null ? void 0 : questions.length) > 1 ? 'Cards' : 'Card')));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  deckBox: {\n    backgroundColor: white,\n    borderRadius: Platform.OS === 'ios' ? 16 : 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 10,\n    padding: 20,\n    shadowRadius: 3,\n    shadowOpacity: 0.8,\n    shadowColor: 'rgba(0, 0, 0, 0.24)',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    }\n  },\n  cardTitle: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: textColor\n  },\n  cardSubtitle: {\n    textAlign: 'center',\n    fontSize: 14,\n    paddingTop: 10,\n    color: red\n  }\n});\nexport default Deck;","map":{"version":3,"sources":["C:/Users/AHMED/Desktop/mobile-flashcards-udacity/components/Deck.js"],"names":["React","white","textColor","red","Deck","style","id","questions","onPress","styles","container","cardTitle","deckBox","cardSubtitle","length","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderRadius","Platform","OS","margin","padding","shadowRadius","shadowOpacity","shadowColor","shadowOffset","width","height","fontSize","fontWeight","color","textAlign","paddingTop"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,GAA3B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA4C;AAAA,wBAAzCC,KAAyC;AAAA,MAAzCA,KAAyC,2BAAjC,EAAiC;AAAA,MAA7BC,EAA6B,QAA7BA,EAA6B;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACvD,MAAIF,EAAE,KAAK,IAAX,EAAiB;AACf,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACG,MAAM,CAACC,SAAR,EAAmBL,KAAnB;AAAb,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACE;AAApB,6BADF,CADF;AAKD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiBP,KAAjB;AAAb,KACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEG;AAA3B,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACE;AAApB,KAAgCL,EAAhC,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACI;AAApB,KACG,GADH,EAEGN,SAAS,KAAIA,SAAJ,oBAAIA,SAAS,CAAEO,MAAf,CAFZ,EAEmC,GAFnC,EAGG,CAAAP,SAAS,QAAT,YAAAA,SAAS,CAAEO,MAAX,IAAoB,CAApB,GAAwB,OAAxB,GAAkC,MAHrC,CAFF,CADF,CADF;AAYD,CArBD;;AAuBA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BP,EAAAA,OAAO,EAAE;AACPQ,IAAAA,eAAe,EAAEnB,KADV;AAEPoB,IAAAA,YAAY,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B,CAFpC;AAGPL,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,UAAU,EAAE,QAJL;AAKPK,IAAAA,MAAM,EAAE,EALD;AAMPC,IAAAA,OAAO,EAAE,EANF;AAOPC,IAAAA,YAAY,EAAE,CAPP;AAQPC,IAAAA,aAAa,EAAE,GARR;AASPC,IAAAA,WAAW,EAAE,qBATN;AAUPC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI;AAVP,GANsB;AAqB/BpB,EAAAA,SAAS,EAAE;AACTqB,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,UAAU,EAAE,MAFH;AAGTC,IAAAA,KAAK,EAAEhC;AAHE,GArBoB;AA0B/BW,EAAAA,YAAY,EAAE;AACZsB,IAAAA,SAAS,EAAE,QADC;AAEZH,IAAAA,QAAQ,EAAE,EAFE;AAGZI,IAAAA,UAAU,EAAE,EAHA;AAIZF,IAAAA,KAAK,EAAE/B;AAJK;AA1BiB,CAAlB,CAAf;AAkCA,eAAeC,IAAf","sourcesContent":["import React from 'react'\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Platform,\r\n  TouchableOpacity,\r\n} from 'react-native'\r\nimport { white, textColor, red } from '../utils/colors'\r\n\r\nconst Deck = ({ style = {}, id, questions, onPress }) => {\r\n  if (id === null) {\r\n    return (\r\n      <View style={[styles.container, style]}>\r\n        <Text style={styles.cardTitle}>No deck on the list</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={[styles.deckBox, style]}>\r\n      <TouchableOpacity onPress={onPress}>\r\n        <Text style={styles.cardTitle}>{id}</Text>\r\n        <Text style={styles.cardSubtitle}>\r\n          {' '}\r\n          {questions && questions?.length}{' '}\r\n          {questions?.length > 1 ? 'Cards' : 'Card'}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  deckBox: {\r\n    backgroundColor: white,\r\n    borderRadius: Platform.OS === 'ios' ? 16 : 2,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    margin: 10,\r\n    padding: 20,\r\n    shadowRadius: 3,\r\n    shadowOpacity: 0.8,\r\n    shadowColor: 'rgba(0, 0, 0, 0.24)',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n  },\r\n  cardTitle: {\r\n    fontSize: 26,\r\n    fontWeight: 'bold',\r\n    color: textColor,\r\n  },\r\n  cardSubtitle: {\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n    paddingTop: 10,\r\n    color: red,\r\n  },\r\n})\r\n\r\nexport default Deck\r\n"]},"metadata":{},"sourceType":"module"}