{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Deck from \"../components/Deck\";\nimport { lightGreen, black } from \"../utils/colors\";\nimport { useSelector } from 'react-redux';\nimport { handleRemoveDeck } from \"../redux/actions\";\nimport { connect } from 'react-redux';\n\nvar DeckList = function DeckList(_ref) {\n  var _route$params;\n\n  var navigation = _ref.navigation,\n      route = _ref.route,\n      dispatch = _ref.dispatch;\n  var decks = useSelector(function (decks) {\n    return decks;\n  });\n  console.log(decks);\n  var title = (_route$params = route.params) == null ? void 0 : _route$params.title;\n  var deck = decks[title];\n  var id = title;\n  var questions = deck == null ? void 0 : deck.questions;\n\n  var setTitle = function setTitle(title) {\n    navigation.setOptions({\n      title: title\n    });\n  };\n\n  useEffect(function () {\n    setTitle(title);\n  });\n\n  var deleteDeck = function deleteDeck(id) {\n    dispatch(handleRemoveDeck(id));\n    navigation.navigate('AppHome', {\n      screen: 'DeckList'\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Deck, {\n    style: styles.deckBox,\n    id: id,\n    questions: questions\n  }), React.createElement(View, null, React.createElement(Button, {\n    textBtn: {\n      color: black\n    },\n    onPress: function onPress() {\n      return navigation.navigate('AddCard', {\n        title: title,\n        id: title\n      });\n    }\n  }, \"Add Card\"), React.createElement(Button, {\n    btnStyle: {\n      backgroundColor: black\n    },\n    onPress: function onPress() {\n      return navigation.navigate('QuizHome', {\n        title: title,\n        id: title\n      });\n    }\n  }, \"Start Quiz\")), React.createElement(TextButton, {\n    onPress: function onPress() {\n      return deleteDeck(id);\n    }\n  }, \"Delete Deck\"));\n};\n\nexport default connect()(DeckList);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around',\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: lightGreen\n  },\n  deckBox: {\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"sources":["C:/Users/AHMED/Desktop/mobile-flashcards-udacity/views/DeckList.js"],"names":["React","useEffect","Deck","lightGreen","black","useSelector","handleRemoveDeck","connect","DeckList","navigation","route","dispatch","decks","console","log","title","params","deck","id","questions","setTitle","setOptions","deleteDeck","navigate","screen","styles","container","deckBox","color","backgroundColor","StyleSheet","create","flex","justifyContent","padding","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { View, StyleSheet } from 'react-native'\r\n//import Deck from '../components/Deck'\r\nimport Deck from '../components/Deck'\r\n//import Button from '../components/Button'\r\nimport { lightGreen, black } from '../utils/colors'\r\n//import TextButton from '../components/TextButton'\r\nimport { useSelector } from 'react-redux'\r\nimport { handleRemoveDeck } from '../redux/actions'\r\nimport { connect } from 'react-redux'\r\n\r\nconst DeckList = ({ navigation, route, dispatch }) => {\r\n  const decks = useSelector((decks) => decks)\r\n  console.log(decks)\r\n  const title = route.params?.title\r\n  const deck = decks[title]\r\n  const id = title\r\n  const questions = deck?.questions\r\n\r\n  const setTitle = (title) => {\r\n    navigation.setOptions({ title: title })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTitle(title)\r\n  })\r\n\r\n  const deleteDeck = (id) => {\r\n    dispatch(handleRemoveDeck(id))\r\n    navigation.navigate('AppHome', { screen: 'DeckList' })\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Deck style={styles.deckBox} id={id} questions={questions} />\r\n      <View>\r\n        <Button\r\n          textBtn={{ color: black }}\r\n          onPress={() =>\r\n            navigation.navigate('AddCard', { title: title, id: title })\r\n          }\r\n        >\r\n          Add Card\r\n        </Button>\r\n        <Button\r\n          btnStyle={{ backgroundColor: black }}\r\n          onPress={() =>\r\n            navigation.navigate('QuizHome', { title: title, id: title })\r\n          }\r\n        >\r\n          Start Quiz\r\n        </Button>\r\n      </View>\r\n      <TextButton onPress={() => deleteDeck(id)}>Delete Deck</TextButton>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default connect()(DeckList)\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'space-around',\r\n    padding: 20,\r\n    alignItems: 'center',\r\n    backgroundColor: lightGreen,\r\n  },\r\n  deckBox: {\r\n    backgroundColor: 'transparent',\r\n  },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}